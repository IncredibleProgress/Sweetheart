# Le grand mercato des langages de programmation

Ce n’est pas très suivi dans nos pays, mais de profonds changements en matière de développement informatique sont
amorcés très sérieusement depuis maintenant environ deux à trois ans. Ces changements de caps, historiques, sont aussi
l’opportunité dans notre pays de rattraper un pesant retard en matière de digitalisation de nos entreprises. J’ajouterais
pour peu que l’on sache monter dans le train à temps. Voici ici dans les très grandes lignes ce qui se passe et pourquoi.

Durant plusieurs décennies les langages C et C++ se sont imposés en clé de voûte des problématiques de bas niveau. À
l’autre extrémité, côté utilisateurs, et ce malgré de lourds handicaps au départ, la norme HTML avec le langage
Javascript n’ont cessé de progresser jusqu’à dépasser le simple cadre du développement web, et venant aujourd’hui
supplanter toute solution de développement applicatif existante par ailleurs avec des outils tels que React. Ces deux
sujets sont à l’origine d’une part significative des évolutions en question.

Depuis son origine l’informatique est portée par des approches approximatives, où la qualité du code produit, sa
fiabilité, ainsi que les questions de sécurité et de maintenance n’ont pas toujours été au cœur de préoccupations. Même
si Linux s’est démarqué dès sa création par une volonté forte de rigueur et de méthode dans son développement, ce qui
en fait comparativement un socle solide, cela ne résout pas définitivement le sujet ce que l’on appelle le passif logiciel,
c’est-à-dire l’ensemble de tout ce qui est mal fait et ne peut pas fonctionner de manière satisfaisante ou pleinement
sécurisée.

En effet certains problèmes sont attenants à la nature même des langages de programmation utilisés et de ce qu’ils
autorisent intrinsèquement. Deux points particuliers constituent les deux grandes préoccupations du moment: les fuites
mémoires en C/C++ et le manque de typage des paramètres passés aux fonctions. Parmi d’autres langages, Javascript
est très concerné sur ce dernier point car conçu à l’origine pour être particulièrement flexible.

Finalement tout ceci conduit à une ligne commune sonnant comme un nouveau départ : le langage Rust est appelé à
remplacer C et C++ sur le bas niveau, le typage est en passe d’être intégré au langage Python devenu essentiel en
matière de calculs et d’IA, Typescript compense les limites de Javascript et, disons-le, toujours associé à React,
enfonce encore un peu plus le clou coté applicatif toutes plateformes confondues. Mentionnons le ici également, les
langages Go et 'C#' connus pour leurs multiples qualités ont quelques bons atouts avec eux par ailleurs. Précisons pour
conclure, que les GAFAM sont bien sûr tous à l’œuvre derrière ces évolutions majeures, mais sachez-le tous ces outils
de développement aptes aux solutions d’avenir sont open source et mis à la disposition de tous. Microsoft vous facilitera
en outre grandement la vie avec son portail de développement Github ainsi que son éditeur VS Code. Soulignons-le,
ces dernières possibilités sont gratuites et à ce jour sans équivalents, il n’y a donc en réalité plus qu’à s’en servir!

N Champion, mai 2024.